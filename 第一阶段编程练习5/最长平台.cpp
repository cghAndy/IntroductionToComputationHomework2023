/*****
题目描述

已知一个数组，这个数组的一个平台（Plateau）就是连续的一串值相同的元素，并且这一串元素不能再延伸。
例如，在1，2，2，3，3，3，4，5，5，6中1，2-2，3-3-3，4，5-5，6都是平台。试编写一个程序，接收一个
数组，把这个数组最长的平台找出来。在上面的例子中3-3-3就是最长的平台。

关于输入

输入数据有多组，每组两行。
第一行有一个整数n，为数组元素的个数，n<10000。
接下来一行为n个整数。（n个整数从小到大排列）
最后会出现一个n=0，表示测试数据结尾。

关于输出

输出最长平台的长度。

例子输入

10
1 2 2 3 3 3 4 5 5 6
5
1 1 1 2 7
0

例子输出

3
3
*****/

#include <iostream>
using namespace std;

int main()
{
    int n = 0;
    int num = 0, prev_num = 0;  // 当前输入的数以及上一个输入的数
    int l = 0, max_l = 0;     // 当前平台长度以及最长的平台长度

    while(cin >> n)
    {
        if (!n)         // 输入0，程序终止
            return 0;

        l = 0;         // 初始化
        max_l = 0;

        while(n--)
        {
            cin >> num;     // 当前输入的数字
            if (l && num == prev_num)   // 若该数字不是第一个（l不是初始化状态）且该数字与上一数字相同
                l++;                    // 则平台长度加一
            else                        // 否则，从该数字起是一个新的平台
                l = 1;                  // 平台长度重置为1
            prev_num = num; // 更新“上一数字”
            if (l > max_l)  // 更新最长平台长度
                max_l = l;
        }
        cout << max_l << endl;
    }
    return 0;
}