/*****
题目描述

N盏灯排成一排，从1到N依次编号。有N个人也同样编号。
第一个人将灯全部熄灭；
第2个人将对应2和2的倍数的灯打开；
第3个人将对应着3和3的倍数的灯做反向操作（如果原来是开，则关掉它，否则就打开它）；
以后的人和3做同样的操作，即第i个人将对应着i和i的倍数的灯做反向操作。

关于输入

灯的总数N, 1<=N<=1000

关于输出

在第N个人操作后，顺序输出还亮着灯的编号。
在每个编号后面输出一个空格即可

例子输入

8

例子输出

2 3 5 6 7 8
*****/

#include <iostream>
using namespace std;

#define MAX_N 1010
int light[MAX_N] = {0}; // 记录灯的状态的数组，0表示关，1表示开；初始化为全部关闭

int main()
{
    int n = 0;
    cin >> n;
    /** 模拟整个开关灯的过程 **/
    for (int i = 2; i <= n; i++)    // 由于第一个人将灯全部关闭，恰好与light初始化状态一致，因此从第二个人开始
        for (int j = i; j <= n; j += i)
            light[j] = 1 - light[j];
    /** 输出开着的灯的编号 **/
    for (int i = 1; i <= n; i++)
        if (light[i])
            cout << i << " ";
    cout << endl;
    return 0;
}