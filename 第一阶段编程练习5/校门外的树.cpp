/*****
题目描述

某校大门外长度为L的马路上有一排树，每两棵相邻的树之间的间隔都是1米。我们可以把马路看成一个数轴，马路的一端在数轴0的位置，
另一端在L的位置；数轴上的每个整数点，即0，1，2，……，L，都种有一棵树。
由于马路上有一些区域要用来建地铁。这些区域用它们在数轴上的起始点和终止点表示。已知任一区域的起始点和终止点的坐标都是整数，
区域之间可能有重合的部分。现在要把这些区域中的树（包括区域端点处的两棵树）移走。你的任务是计算将这些树都移走后，马路上还
有多少棵树。

关于输入

输入的第一行有两个整数L（1 <= L <= 10000）和 M（1 <= M <= 100），L代表马路的长度，M代表区域的数目，L和M之间用一个空格
隔开。接下来的M行每行包含两个不同的整数，用一个空格隔开，表示一个区域的起始点和终止点的坐标。

关于输出

输出包括一行，这一行只包含一个整数，表示马路上剩余的树的数目。

例子输入

500 3
150 300
100 200
470 471

例子输出

298
*****/

#include <iostream>
using namespace std;

#define MAX_N 10100
int rm[MAX_N] = {0};    // 记录是否移走树的数组，0表示不移走，1表示移走

int main()
{
    int L = 0, m = 0;
    int left = 0, right = 0;    // 移走树的区间
    int cnt = 0;                // 树的总数
    cin >> L >> m;
    while(m--)
    {
        cin >> left >> right;
        /** 区间合法性检查 **/
        if (left > right)       // 若左大于右
        {                       // 则交换区间的左右
            left ^= right;
            right ^= left;
            left ^= right;
        }
        if (left < 0)           // 若左小于0
            left = 0;           // 则左为0
        if (right > L)          // 若右大于L
            right = L;          // 则右为L
        /** 在rm数组标记区间部分 **/
        for (int i = left; i <= right; i++)
            rm[i] = 1;
    }
    /** 计数 **/
    cnt = L + 1;
    for (int i = 0; i <= L; i++)
        cnt -= rm[i];
    cout << cnt << endl;
    return 0;
}