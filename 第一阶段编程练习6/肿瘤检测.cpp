/*****
题目描述

一张CT扫描的灰度图像可以用一个N*N（0< N< 100）的矩阵描述，矩阵上的每个点对应一个灰度值（整数），
其取值范围是0-255。我们假设给定的图像中有且只有一个肿瘤。在图上监测肿瘤的方法如下：如果某个点对
应的灰度值小于等于50，则这个点在肿瘤上，否则不在肿瘤上。我们把在肿瘤上的点的数目加起来，就得到了
肿瘤在图上的面积。任何在肿瘤上的点，如果它是图像的边界或者它的上下左右四个相邻点中至少有一个是非
肿瘤上的点，则该点称为肿瘤的边界点。肿瘤的边界点的个数称为肿瘤的周长。现在给定一个图像，要求计算
其中的肿瘤的面积和周长。

关于输入

输入第一行包含一个正整数N (0< N< 100) 表示图像的大小；接下来N行，每行包含图像的一行。图像的一行
用N个整数表示（所有整数大于等于0，小于等于255），两个整数之间用一个空格隔开。

关于输出

输出只有一行，该行包含两个正整数，分别为给定图像中肿瘤的面积和周长，用一个空格分开。

例子输入

6
99 99 99 99 99 99
99 99 99 50 99 99
99 99 49 49 50 51
99 50 20 25 52 99
40 50 99 99 99 99
99 99 99 99 99 99

例子输出

9 8
*****/

#include <iostream>
using namespace std;

#define MAX_N 200
#define MAX_D 4
#define THRESHOLD 50

int img[MAX_N][MAX_N] = {0};    // 图像
int n = 0;                      // 图像大小

int dx[MAX_D] = {0, 0, 1, -1};  // 四个方向x的变化量
int dy[MAX_D] = {1, -1, 0, 0};  // 四个方向y的变化量

/** 检查是否处于肿瘤的边界 **/
bool check_border(int x, int y)
{
    if (x <= 0 || y <= 0 || x >= n - 1 || y >= n - 1)   // 若在图像边界
        return true;                                   // 则处于肿瘤的边界
    for (int d = 0;  d < MAX_D; d++)                // 检查四个方向
        if (img[x + dx[d]][y + dy[d]] > THRESHOLD)  // 若不是肿瘤
            return true;                           // 则处于癌症的边界
    return false;   // 否则不处于边界
}

int main()
{
    int S = 0, C = 0;

    /** 读入数据 **/
    cin >> n;
    for (int i = 0; i < n; i++)
        for (int j = 0; j < n; j++)
            cin >> img[i][j];

    /** 计算面积和周长 **/
    for (int i = 0; i < n; i++)
        for (int j = 0; j < n; j++)
            if (img[i][j] <= THRESHOLD)     // 若是肿瘤
            {
                S++;                        // 则面积加一
                if (check_border(i, j))     // 并检查是否处于边界
                    C++;
            }

    cout << S << " " << C << endl;
    return 0;
}